Open PowerShell as Administrator (port 80 requires elevated privileges):
Press Win + S, type PowerShell, right-click, and select "Run as Administrator".
Navigate to the script directory:
powershell



Sao chép
cd C:\Scripts
Run the script:
powershell

Thu gọn

Bọc lại

Sao chép
.\serve_file.ps1
Test It:
From another device or browser, go to http://your_public_ip. You should see the contents of example.txt.
Notes
Execution Policy: If PowerShell blocks the script, set the execution policy:
powershell

Thu gọn

Bọc lại

Sao chép
Set-ExecutionPolicy -Scope CurrentUser -ExecutionPolicy RemoteSigned
Confirm with Y when prompted.
Content-Type: Adjust Content-Type for different files (e.g., text/html for .html, image/jpeg for .jpg).



# File to serve
$FilePath = "C:\path\to\example.txt"

# Check if file exists
if (-Not (Test-Path $FilePath)) {
    Write-Host "Error: File $FilePath not found!"
    exit
}

# HTTP response header
$Header = "HTTP/1.1 200 OK`r`nContent-Type: text/plain`r`nConnection: close`r`n`r`n"
$FileContent = Get-Content -Path $FilePath -Raw

# Create TCP listener on port 80
$Listener = New-Object System.Net.Sockets.TcpListener('0.0.0.0', 80)
$Listener.Start()
Write-Host "Server started. Listening on port 80..."

# Infinite loop to handle requests
while ($true) {
    $Client = $Listener.AcceptTcpClient()
    Write-Host "Connection received from $($Client.Client.RemoteEndPoint)"

    # Get the network stream
    $Stream = $Client.GetStream()
    $Writer = New-Object System.IO.StreamWriter($Stream)
    $Writer.AutoFlush = $true

    # Send the header and file content
    $Writer.Write($Header)
    $Writer.Write($FileContent)

    # Close the connection
    $Writer.Close()
    $Stream.Close()
    $Client.Close()
}

# Stop listener (unreachable due to infinite loop, use Ctrl+C to stop)
$Listener.Stop()